Parameters:
  ExecutionRoleArn:
    Type: String
    Description: the arn of execution role for a SageMaker Pipeline
    MinLength: 10
  AssetParametersf548316fae2347f1029ea86b62ade2cd8c53555d7a8e235b4812f0912ea273b0S3Bucket26988099:
    Type: String
    Description: S3 bucket for asset "f548316fae2347f1029ea86b62ade2cd8c53555d7a8e235b4812f0912ea273b0"
  AssetParametersf548316fae2347f1029ea86b62ade2cd8c53555d7a8e235b4812f0912ea273b0S3VersionKey3582CA93:
    Type: String
    Description: S3 key for asset version "f548316fae2347f1029ea86b62ade2cd8c53555d7a8e235b4812f0912ea273b0"
  AssetParametersf548316fae2347f1029ea86b62ade2cd8c53555d7a8e235b4812f0912ea273b0ArtifactHash3A6000DE:
    Type: String
    Description: Artifact hash for asset "f548316fae2347f1029ea86b62ade2cd8c53555d7a8e235b4812f0912ea273b0"
Resources:
  SageMakerExecutionRolePolicyED4D0ABF:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - sqs:GetQueueAttributes
              - sqs:GetQueueUrl
              - sqs:SendMessage
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - pipelinecallbacksglueprep0F0C1313
                - Arn
        Version: "2012-10-17"
      PolicyName: SageMakerExecutionRolePolicyED4D0ABF
      Roles:
        - Ref: ExecutionRoleArn
    Metadata:
      aws:cdk:path: CfnStack/SageMakerExecutionRole/Policy/Resource
  Role1ABCC5F0:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: glue.amazonaws.com
        Version: "2012-10-17"
      Description: Glue role
    Metadata:
      aws:cdk:path: CfnStack/Role/Resource
  RoleDefaultPolicy5FFB7DAB:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: s3:*
            Effect: Allow
            Resource: arn:aws:s3:::*
          - Action:
              - s3:GetBucket*
              - s3:GetObject*
              - s3:List*
            Effect: Allow
            Resource:
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":s3:::"
                    - Ref: AssetParametersf548316fae2347f1029ea86b62ade2cd8c53555d7a8e235b4812f0912ea273b0S3Bucket26988099
                    - /*
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":s3:::"
                    - Ref: AssetParametersf548316fae2347f1029ea86b62ade2cd8c53555d7a8e235b4812f0912ea273b0S3Bucket26988099
        Version: "2012-10-17"
      PolicyName: RoleDefaultPolicy5FFB7DAB
      Roles:
        - Ref: Role1ABCC5F0
    Metadata:
      aws:cdk:path: CfnStack/Role/DefaultPolicy/Resource
  sagemakerpipelineGlueJob2CFB7A2C:
    Type: AWS::Glue::Job
    Properties:
      Command:
        Name: glueetl
        PythonVersion: "3"
        ScriptLocation:
          Fn::Join:
            - ""
            - - s3://
              - Ref: AssetParametersf548316fae2347f1029ea86b62ade2cd8c53555d7a8e235b4812f0912ea273b0S3Bucket26988099
              - /
              - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersf548316fae2347f1029ea86b62ade2cd8c53555d7a8e235b4812f0912ea273b0S3VersionKey3582CA93
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersf548316fae2347f1029ea86b62ade2cd8c53555d7a8e235b4812f0912ea273b0S3VersionKey3582CA93
      Role:
        Fn::GetAtt:
          - Role1ABCC5F0
          - Arn
      DefaultArguments:
        --job-language: python
        --job-bookmark-option: job-bookmark-enable
        --enable-metrics: ""
        --additional-python-modules: pyarrow==2,awswrangler==2.9.0,fsspec==0.7.4
      Description: Prepare data for SageMaker training
      ExecutionProperty:
        MaxConcurrentRuns: 1
      GlueVersion: "2.0"
      Name: sagemaker-pipeline-GlueJob
      NumberOfWorkers: 10
      Timeout: 60
      WorkerType: Standard
    Metadata:
      aws:cdk:path: CfnStack/sagemaker-pipeline-GlueJob/Resource
  PreprocessingRole847CD9CD:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                Fn::Join:
                  - ""
                  - - states.
                    - Ref: AWS::Region
                    - .amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: CfnStack/Preprocessing/Role/Resource
  PreprocessingRoleDefaultPolicyE0D18857:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - glue:BatchStopJobRun
              - glue:GetJobRun
              - glue:GetJobRuns
              - glue:StartJobRun
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":glue:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :job/
                  - Ref: sagemakerpipelineGlueJob2CFB7A2C
          - Action:
              - sagemaker:sendPipelineExecutionStepFailure
              - sagemaker:sendPipelineExecutionStepSuccess
            Effect: Allow
            Resource: arn:aws:sagemaker:us-east-1:822507008821:pipeline/*
        Version: "2012-10-17"
      PolicyName: PreprocessingRoleDefaultPolicyE0D18857
      Roles:
        - Ref: PreprocessingRole847CD9CD
    Metadata:
      aws:cdk:path: CfnStack/Preprocessing/Role/DefaultPolicy/Resource
  Preprocessing329E01E4:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn:
        Fn::GetAtt:
          - PreprocessingRole847CD9CD
          - Arn
      DefinitionString:
        Fn::Join:
          - ""
          - - '{"StartAt":"StartGlueJobTask","States":{"StartGlueJobTask":{"Next":"Job successful?","Catch":[{"ErrorEquals":["States.ALL"],"ResultPath":"$.error-info","Next":"SendFailure"}],"Type":"Task","ResultPath":"$.taskresult","Resource":"arn:'
            - Ref: AWS::Partition
            - :states:::glue:startJobRun.sync","Parameters":{"JobName":"
            - Ref: sagemakerpipelineGlueJob2CFB7A2C
            - '","Arguments":{"--job-bookmark-option":"job-bookmark-enable","--additional-python-modules":"pyarrow==2,awswrangler==2.9.0,fsspec==0.7.4","--TRAIN_URI.$":"$.body.trainUri","--VALIDATION_URI.$":"$.body.valUri","--TEST_URI.$":"$.body.testUri","--INPUT_DIR.$":"$.body.inputDir"}}},"Job successful?":{"Type":"Choice","Choices":[{"Variable":"$.taskresult.JobRunState","StringEquals":"SUCCEEDED","Next":"SendSuccess"}],"Default":"SendFailure"},"SendFailure":{"End":true,"Type":"Task","Resource":"arn:'
            - Ref: AWS::Partition
            - ':states:::aws-sdk:sagemaker:sendPipelineExecutionStepFailure","Parameters":{"CallbackToken.$":"$.body.token","FailureReason":"Unknown reason"}},"SendSuccess":{"End":true,"Type":"Task","Resource":"arn:'
            - Ref: AWS::Partition
            - :states:::aws-sdk:sagemaker:sendPipelineExecutionStepSuccess","Parameters":{"CallbackToken.$":"$.body.token","OutputParameters":[{"Name":"trainUri","Value.$":"$.body.trainUri"},{"Name":"valUri","Value.$":"$.body.valUri"},{"Name":"testUri","Value.$":"$.body.testUri"}]}}}}
    DependsOn:
      - PreprocessingRoleDefaultPolicyE0D18857
      - PreprocessingRole847CD9CD
    Metadata:
      aws:cdk:path: CfnStack/Preprocessing/Resource
  executesfnfunctionServiceRole882AF466:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: CfnStack/execute_sfn_function/ServiceRole/Resource
  executesfnfunctionServiceRoleDefaultPolicy899E17FC:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: states:StartExecution
            Effect: Allow
            Resource: arn:aws:states:us-east-1:822507008821:stateMachine:*
          - Action: sagemaker:SendPipelineExecutionStepFailure
            Effect: Allow
            Resource: arn:aws:sagemaker:us-east-1:822507008821:pipeline/*
          - Action:
              - sqs:ChangeMessageVisibility
              - sqs:DeleteMessage
              - sqs:GetQueueAttributes
              - sqs:GetQueueUrl
              - sqs:ReceiveMessage
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - pipelinecallbacksglueprep0F0C1313
                - Arn
        Version: "2012-10-17"
      PolicyName: executesfnfunctionServiceRoleDefaultPolicy899E17FC
      Roles:
        - Ref: executesfnfunctionServiceRole882AF466
    Metadata:
      aws:cdk:path: CfnStack/execute_sfn_function/ServiceRole/DefaultPolicy/Resource
  executesfnfunction27F86BB6:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: |
          import os
          import json
          import boto3
          from boto3.dynamodb.conditions import Key, Attr
          from botocore.exceptions import ClientError
          from decimal import Decimal
          import time
          from datetime import date, datetime

          import logging

          logger = logging.getLogger()
          logger.setLevel(logging.INFO)
          logging.basicConfig(format='%(asctime)s - %(message)s', level=logging.INFO)

          # Create a client for the AWS Analytical service to use
          client = boto3.client('stepfunctions')

          sagemaker = boto3.client('sagemaker')
          s3 = boto3.client('s3')

          sm_arn = os.environ["state_machine_arn"]

          def datetimeconverter(o):
              if isinstance(o, dt.datetime):
                  return o.__str__()
                  
          def json_serial(obj):
              """JSON serializer for objects not serializable by default"""
              if isinstance(obj, (datetime, date)):
                  return obj.isoformat()
              raise TypeError("Type %s not serializable" % type(obj))

          def lambda_handler(event, context):
              """Calls custom job waiter developed by user

              Arguments:
                  event {dict} -- Dictionary with details on previous processing step
                  context {dict} -- Dictionary with details on Lambda context

              Returns:
                  {dict} -- Dictionary with Processed Bucket, Key(s) and Job Details
              """
              try:

                  logger.info('Lambda event is [{}]'.format(event))
                  # Note: For simplicity, parameters "target_job" 
                  # and "target_ddb" are hardcoded values defined during deployment of thhe pipeline.
                  # Other parameters can be dynamically retrieved
                  for record in event['Records']:
                      payload = json.loads(record["body"])
                      token = payload["token"]
                      arguments = payload["arguments"]
                      trainUri = arguments["trainUri"]
                      valUri = arguments["valUri"]
                      testUri = arguments["testUri"]
                      input_dir = arguments['inputDir']
                      
                      logger.info('Trigger execution of state machine [{}]'.format(sm_arn))

                      # Prepare input to state machine
                      message = {
                          'statusCode': 200,
                          'body': {
                              "trainUri": trainUri,
                              "valUri": valUri,
                              "testUri": testUri,
                              'inputDir': input_dir,
                              "token": token
                          }
                      }

                      logger.info('Input Message is [{}]'.format(message))

                      client.start_execution(stateMachineArn=sm_arn,input=json.dumps(message, default=json_serial))

              except Exception as e:
                  logger.error("Fatal error", exc_info=True)
                  sagemaker.send_pipeline_execution_step_failure(
                      CallbackToken=token,
                      FailureReason="Fatal error"
                  )
                  raise e
              return 200
      Role:
        Fn::GetAtt:
          - executesfnfunctionServiceRole882AF466
          - Arn
      Environment:
        Variables:
          state_machine_arn:
            Ref: Preprocessing329E01E4
      Handler: index.lambda_handler
      Runtime: python3.8
      Timeout: 300
    DependsOn:
      - executesfnfunctionServiceRoleDefaultPolicy899E17FC
      - executesfnfunctionServiceRole882AF466
    Metadata:
      aws:cdk:path: CfnStack/execute_sfn_function/Resource
  executesfnfunctionSqsEventSourceCfnStackpipelinecallbacksglueprepED6B23E07BB271EF:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      FunctionName:
        Ref: executesfnfunction27F86BB6
      EventSourceArn:
        Fn::GetAtt:
          - pipelinecallbacksglueprep0F0C1313
          - Arn
    Metadata:
      aws:cdk:path: CfnStack/execute_sfn_function/SqsEventSource:CfnStackpipelinecallbacksglueprepED6B23E0/Resource
  pipelinecallbacksglueprep0F0C1313:
    Type: AWS::SQS::Queue
    Properties:
      VisibilityTimeout: 600
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: CfnStack/pipeline_callbacks_glue_prep/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/2WQ0W7CMAxFv4X3NMB4mPY2qNikSWisfEEIpmRtky52QCjKv88JE9q0J19fXfs4mcv540zOJs/qgpU+dNOonQcZd6R0J+qj3SqvBiDwogF0wWsQS0QgDrTGtqJ2FskHTTn8HmgMRd3DrDlyMGScTSJTolGDjFvXG30thJtqXF/SuSbR9oGveHP7bHFJAheVymCUhc+9XAXdAa0UgkCC8RiszhisSGGHMr7yEr7TEy9oghW16vvlBXfgz0Yz5M+QjPXJsS14gmCj9MnYctDvPoleDfuDkvHlZy4n7np9Bku78vCNGsfyP0f732X0FwM/AoSCKCKlJLZXOjk7XcgnOX+YfKIxlQ+WzACyudVvwHbTNbEBAAA=
    Metadata:
      aws:cdk:path: CfnStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Outputs:
  SqsURL:
    Value:
      Ref: pipelinecallbacksglueprep0F0C1313
    Export:
      Name: SM-Pipeline-SQS-URL
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

